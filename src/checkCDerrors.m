function [rxn, met, rev, form] = checkCDerrors(map, model)
% Check discrepancies between a CD map and a COBRA model. 
%
% USAGE:
%
%    [rxn, met, rev, form] = checkCDerros(map, model)
%
% INPUTS:
%    map:          A parsed model structure generated by 
%                  'transformXML2MatStruct' function
%    model:        A COBRA model 
%
% OUTPUTS:
%    rxn:          structure with common reactions between map and model
%                  extra reactions in map not in the model.
%                  extra reactions in the model not in the map.
%    met:          structure with common mets in map and model
%                  extra mets in map not in model.
%                  extra mets in model not in map.
%    rev:          structure with
%                  reversible reaction in map, considered irreversible
%                  in model.
%                  irreversible reaction in map, considered reversible
%                  in model.
%    form:         structure with formula errors etc 
%
% .. Author: - J.modamio LCSB, Belval, Luxembourg 18/07/2017

    % Check reactions errors
    commonRxns = intersect(map.rxnName, model.rxns);
    extraRxnMap = setdiff(map.rxnName, model.rxns);
    extraRxnModel = setdiff(model.rxns, map.rxnName);
    rxn = struct('common_rxns_map_and_model',{commonRxns},'extra_rxns_map',{extraRxnMap},'extra_rxn_model',{extraRxnModel});
    
    % Avoid to obtain subsystems as metabolites (obtain just metabolites) 
    g=strfind(map.specName,'[');
    in=find(~cellfun(@isempty, g));
    metsMap=map.specName(in,:);
    
    commonMets = intersect(metsMap, model.mets);
    extraMetsMap = setdiff(metsMap, model.mets);
    extraMetsModel = setdiff(model.mets, metsMap);
    
    met = struct('common_mets_map_and_model',{commonMets},'extra_mets_map',{extraMetsMap},'extra_mets_model',{extraMetsModel});
    
    % Check reversibility 
    reversible =strfind(map.rxnReversibility,'true');
    index=find(~cellfun(@isempty, reversible));
    reversibleRxnsMap = map.rxnName(index,:) ;

    irreversible =strfind(map.rxnReversibility,'false');
    index2=find(~cellfun(@isempty, irreversible));
    irreversibleRxnsMap = map.rxnName(index2,:) ;

    % Reversibility of reactions in Recon3
    formula = [map.rxnName,printRxnFormula(model,map.rxnName)];
    
    % Found Irreversible reactions
    irre=strfind(formula(:,2),'->');
    index=find(~cellfun(@isempty, irre));
    irRxn=formula(index,:);

    % Found Reversible reactions
    re=strfind(formula(:,2),'<=>');
    index=find(~cellfun(@isempty, re));
    rRxn=formula(index,:);

    % Comparison between Recon3 and Cell Designer
    errorReversibleMap = setdiff(reversibleRxnsMap,rRxn(:,1)); %reactions are reversible in the map, but doesnt appear in the model 
    errorIrreversibleMap = setdiff(irreversibleRxnsMap,irRxn(:,1)); %reactions are reversible in the map, but doesnt appear in the model 
    rev = struct('wrong_reversible_rxns_map',{errorReversibleMap},'wrong_irreversible_rxns_map',{errorIrreversibleMap});

    % Check formula errors (formula) 
    [wrongTable, absentModelTable, absentMapTable, duplicateTable] = compareModelMapFormulas(model, map);

    form = struct('wrong_reaction_formula',{wrongTable}, 'reactions_in_map_not_in_model',{absentModelTable},'reactions_in_model_not_in_map',{absentMapTable}, 'duplicated_reactions',{duplicateTable});

end